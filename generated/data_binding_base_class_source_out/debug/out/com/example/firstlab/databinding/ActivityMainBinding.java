// Generated by view binder compiler. Do not edit!
package com.example.firstlab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.gridlayout.widget.GridLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.firstlab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button button0;

  @NonNull
  public final Button button1;

  @NonNull
  public final Button button2;

  @NonNull
  public final Button button3;

  @NonNull
  public final Button button4;

  @NonNull
  public final Button button5;

  @NonNull
  public final Button button6;

  @NonNull
  public final Button button7;

  @NonNull
  public final Button button8;

  @NonNull
  public final Button button9;

  @NonNull
  public final Button buttonAngleMode;

  @NonNull
  public final Button buttonCos;

  @NonNull
  public final Button buttonDivide;

  @NonNull
  public final Button buttonEquals;

  @NonNull
  public final Button buttonErase;

  @NonNull
  public final Button buttonFullClean;

  @NonNull
  public final Button buttonHistory;

  @NonNull
  public final Button buttonLeftBracket;

  @NonNull
  public final Button buttonLevel;

  @NonNull
  public final Button buttonLog;

  @NonNull
  public final Button buttonMinus;

  @NonNull
  public final Button buttonMyltiply;

  @NonNull
  public final Button buttonPlus;

  @NonNull
  public final Button buttonPoint;

  @NonNull
  public final Button buttonPow;

  @NonNull
  public final Button buttonRightBracket;

  @NonNull
  public final Button buttonRoot;

  @NonNull
  public final Button buttonSin;

  @NonNull
  public final Button buttonTan;

  @NonNull
  public final Button buttonTheme;

  @NonNull
  public final GridLayout gridLayout;

  @NonNull
  public final LinearLayout rootLayout;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TextView tvResult;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button button0,
      @NonNull Button button1, @NonNull Button button2, @NonNull Button button3,
      @NonNull Button button4, @NonNull Button button5, @NonNull Button button6,
      @NonNull Button button7, @NonNull Button button8, @NonNull Button button9,
      @NonNull Button buttonAngleMode, @NonNull Button buttonCos, @NonNull Button buttonDivide,
      @NonNull Button buttonEquals, @NonNull Button buttonErase, @NonNull Button buttonFullClean,
      @NonNull Button buttonHistory, @NonNull Button buttonLeftBracket, @NonNull Button buttonLevel,
      @NonNull Button buttonLog, @NonNull Button buttonMinus, @NonNull Button buttonMyltiply,
      @NonNull Button buttonPlus, @NonNull Button buttonPoint, @NonNull Button buttonPow,
      @NonNull Button buttonRightBracket, @NonNull Button buttonRoot, @NonNull Button buttonSin,
      @NonNull Button buttonTan, @NonNull Button buttonTheme, @NonNull GridLayout gridLayout,
      @NonNull LinearLayout rootLayout, @NonNull ScrollView scrollView,
      @NonNull TextView tvResult) {
    this.rootView = rootView;
    this.button0 = button0;
    this.button1 = button1;
    this.button2 = button2;
    this.button3 = button3;
    this.button4 = button4;
    this.button5 = button5;
    this.button6 = button6;
    this.button7 = button7;
    this.button8 = button8;
    this.button9 = button9;
    this.buttonAngleMode = buttonAngleMode;
    this.buttonCos = buttonCos;
    this.buttonDivide = buttonDivide;
    this.buttonEquals = buttonEquals;
    this.buttonErase = buttonErase;
    this.buttonFullClean = buttonFullClean;
    this.buttonHistory = buttonHistory;
    this.buttonLeftBracket = buttonLeftBracket;
    this.buttonLevel = buttonLevel;
    this.buttonLog = buttonLog;
    this.buttonMinus = buttonMinus;
    this.buttonMyltiply = buttonMyltiply;
    this.buttonPlus = buttonPlus;
    this.buttonPoint = buttonPoint;
    this.buttonPow = buttonPow;
    this.buttonRightBracket = buttonRightBracket;
    this.buttonRoot = buttonRoot;
    this.buttonSin = buttonSin;
    this.buttonTan = buttonTan;
    this.buttonTheme = buttonTheme;
    this.gridLayout = gridLayout;
    this.rootLayout = rootLayout;
    this.scrollView = scrollView;
    this.tvResult = tvResult;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button0;
      Button button0 = ViewBindings.findChildViewById(rootView, id);
      if (button0 == null) {
        break missingId;
      }

      id = R.id.button1;
      Button button1 = ViewBindings.findChildViewById(rootView, id);
      if (button1 == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.button3;
      Button button3 = ViewBindings.findChildViewById(rootView, id);
      if (button3 == null) {
        break missingId;
      }

      id = R.id.button4;
      Button button4 = ViewBindings.findChildViewById(rootView, id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.button5;
      Button button5 = ViewBindings.findChildViewById(rootView, id);
      if (button5 == null) {
        break missingId;
      }

      id = R.id.button6;
      Button button6 = ViewBindings.findChildViewById(rootView, id);
      if (button6 == null) {
        break missingId;
      }

      id = R.id.button7;
      Button button7 = ViewBindings.findChildViewById(rootView, id);
      if (button7 == null) {
        break missingId;
      }

      id = R.id.button8;
      Button button8 = ViewBindings.findChildViewById(rootView, id);
      if (button8 == null) {
        break missingId;
      }

      id = R.id.button9;
      Button button9 = ViewBindings.findChildViewById(rootView, id);
      if (button9 == null) {
        break missingId;
      }

      id = R.id.button_angle_mode;
      Button buttonAngleMode = ViewBindings.findChildViewById(rootView, id);
      if (buttonAngleMode == null) {
        break missingId;
      }

      id = R.id.button_cos;
      Button buttonCos = ViewBindings.findChildViewById(rootView, id);
      if (buttonCos == null) {
        break missingId;
      }

      id = R.id.button_divide;
      Button buttonDivide = ViewBindings.findChildViewById(rootView, id);
      if (buttonDivide == null) {
        break missingId;
      }

      id = R.id.button_equals;
      Button buttonEquals = ViewBindings.findChildViewById(rootView, id);
      if (buttonEquals == null) {
        break missingId;
      }

      id = R.id.button_erase;
      Button buttonErase = ViewBindings.findChildViewById(rootView, id);
      if (buttonErase == null) {
        break missingId;
      }

      id = R.id.button_full_clean;
      Button buttonFullClean = ViewBindings.findChildViewById(rootView, id);
      if (buttonFullClean == null) {
        break missingId;
      }

      id = R.id.button_history;
      Button buttonHistory = ViewBindings.findChildViewById(rootView, id);
      if (buttonHistory == null) {
        break missingId;
      }

      id = R.id.button_left_bracket;
      Button buttonLeftBracket = ViewBindings.findChildViewById(rootView, id);
      if (buttonLeftBracket == null) {
        break missingId;
      }

      id = R.id.button_level;
      Button buttonLevel = ViewBindings.findChildViewById(rootView, id);
      if (buttonLevel == null) {
        break missingId;
      }

      id = R.id.button_log;
      Button buttonLog = ViewBindings.findChildViewById(rootView, id);
      if (buttonLog == null) {
        break missingId;
      }

      id = R.id.button_minus;
      Button buttonMinus = ViewBindings.findChildViewById(rootView, id);
      if (buttonMinus == null) {
        break missingId;
      }

      id = R.id.button_myltiply;
      Button buttonMyltiply = ViewBindings.findChildViewById(rootView, id);
      if (buttonMyltiply == null) {
        break missingId;
      }

      id = R.id.button_plus;
      Button buttonPlus = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlus == null) {
        break missingId;
      }

      id = R.id.button_point;
      Button buttonPoint = ViewBindings.findChildViewById(rootView, id);
      if (buttonPoint == null) {
        break missingId;
      }

      id = R.id.button_pow;
      Button buttonPow = ViewBindings.findChildViewById(rootView, id);
      if (buttonPow == null) {
        break missingId;
      }

      id = R.id.button_right_bracket;
      Button buttonRightBracket = ViewBindings.findChildViewById(rootView, id);
      if (buttonRightBracket == null) {
        break missingId;
      }

      id = R.id.button_root;
      Button buttonRoot = ViewBindings.findChildViewById(rootView, id);
      if (buttonRoot == null) {
        break missingId;
      }

      id = R.id.button_sin;
      Button buttonSin = ViewBindings.findChildViewById(rootView, id);
      if (buttonSin == null) {
        break missingId;
      }

      id = R.id.button_tan;
      Button buttonTan = ViewBindings.findChildViewById(rootView, id);
      if (buttonTan == null) {
        break missingId;
      }

      id = R.id.button_theme;
      Button buttonTheme = ViewBindings.findChildViewById(rootView, id);
      if (buttonTheme == null) {
        break missingId;
      }

      id = R.id.gridLayout;
      GridLayout gridLayout = ViewBindings.findChildViewById(rootView, id);
      if (gridLayout == null) {
        break missingId;
      }

      LinearLayout rootLayout = (LinearLayout) rootView;

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.tvResult;
      TextView tvResult = ViewBindings.findChildViewById(rootView, id);
      if (tvResult == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, button0, button1, button2, button3,
          button4, button5, button6, button7, button8, button9, buttonAngleMode, buttonCos,
          buttonDivide, buttonEquals, buttonErase, buttonFullClean, buttonHistory,
          buttonLeftBracket, buttonLevel, buttonLog, buttonMinus, buttonMyltiply, buttonPlus,
          buttonPoint, buttonPow, buttonRightBracket, buttonRoot, buttonSin, buttonTan, buttonTheme,
          gridLayout, rootLayout, scrollView, tvResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
