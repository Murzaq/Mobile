// Generated by view binder compiler. Do not edit!
package com.example.firstlab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.firstlab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ThemeSelectionDialogBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageButton btnClose;

  @NonNull
  public final Button buttonTheme1;

  @NonNull
  public final Button buttonTheme2;

  @NonNull
  public final Button buttonTheme3;

  @NonNull
  public final Button buttonTheme4;

  @NonNull
  public final View colorCircle1;

  @NonNull
  public final View colorCircle2;

  @NonNull
  public final View colorCircle3;

  @NonNull
  public final View colorCircle4;

  @NonNull
  public final ScrollView historyScrollView;

  private ThemeSelectionDialogBinding(@NonNull ScrollView rootView, @NonNull ImageButton btnClose,
      @NonNull Button buttonTheme1, @NonNull Button buttonTheme2, @NonNull Button buttonTheme3,
      @NonNull Button buttonTheme4, @NonNull View colorCircle1, @NonNull View colorCircle2,
      @NonNull View colorCircle3, @NonNull View colorCircle4,
      @NonNull ScrollView historyScrollView) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.buttonTheme1 = buttonTheme1;
    this.buttonTheme2 = buttonTheme2;
    this.buttonTheme3 = buttonTheme3;
    this.buttonTheme4 = buttonTheme4;
    this.colorCircle1 = colorCircle1;
    this.colorCircle2 = colorCircle2;
    this.colorCircle3 = colorCircle3;
    this.colorCircle4 = colorCircle4;
    this.historyScrollView = historyScrollView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ThemeSelectionDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ThemeSelectionDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.theme_selection_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ThemeSelectionDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnClose;
      ImageButton btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.button_theme_1;
      Button buttonTheme1 = ViewBindings.findChildViewById(rootView, id);
      if (buttonTheme1 == null) {
        break missingId;
      }

      id = R.id.button_theme_2;
      Button buttonTheme2 = ViewBindings.findChildViewById(rootView, id);
      if (buttonTheme2 == null) {
        break missingId;
      }

      id = R.id.button_theme_3;
      Button buttonTheme3 = ViewBindings.findChildViewById(rootView, id);
      if (buttonTheme3 == null) {
        break missingId;
      }

      id = R.id.button_theme_4;
      Button buttonTheme4 = ViewBindings.findChildViewById(rootView, id);
      if (buttonTheme4 == null) {
        break missingId;
      }

      id = R.id.color_circle_1;
      View colorCircle1 = ViewBindings.findChildViewById(rootView, id);
      if (colorCircle1 == null) {
        break missingId;
      }

      id = R.id.color_circle_2;
      View colorCircle2 = ViewBindings.findChildViewById(rootView, id);
      if (colorCircle2 == null) {
        break missingId;
      }

      id = R.id.color_circle_3;
      View colorCircle3 = ViewBindings.findChildViewById(rootView, id);
      if (colorCircle3 == null) {
        break missingId;
      }

      id = R.id.color_circle_4;
      View colorCircle4 = ViewBindings.findChildViewById(rootView, id);
      if (colorCircle4 == null) {
        break missingId;
      }

      ScrollView historyScrollView = (ScrollView) rootView;

      return new ThemeSelectionDialogBinding((ScrollView) rootView, btnClose, buttonTheme1,
          buttonTheme2, buttonTheme3, buttonTheme4, colorCircle1, colorCircle2, colorCircle3,
          colorCircle4, historyScrollView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
